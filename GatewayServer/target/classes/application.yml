spring:
  application:
    name: GatewayServer  # 게이트웨이 서버의 이름을 'GatewayServer'로 설정합니다.
  cloud:
    gateway:
      routes:
        # 라우트 설정: 응답을 보낼 목적지 URI와 필터 항목을 식별하기 위한 ID를 설정합니다.
        # 예: http://localhost:8081 (Service01의 포트번호)
        - id: first-service
          uri: lb://SERVICE01  # Eureka에서 'SERVICE01'을 찾아 해당 서비스의 인스턴스로 로드 밸런싱하여 라우팅합니다.
          predicates:
            - Path=/tiger/**  # '/tiger/**' 경로로 들어오는 요청을 처리합니다.
        - id: second-service
          uri: lb://SERVICE02  # Eureka에서 'SERVICE02'를 찾아 해당 서비스의 인스턴스로 로드 밸런싱하여 라우팅합니다.
          predicates:
            - Path=/lion/**  # '/lion/**' 경로로 들어오는 요청을 처리합니다.
        - id: service01-actuator
          uri: lb://SERVICE01  # Eureka에서 'SERVICE01'을 찾아 해당 서비스의 인스턴스로 로드 밸런싱하여 라우팅합니다.
          predicates:
            - Path=/actuator/**  # '/actuator/**' 경로로 들어오는 요청을 처리합니다.
        - id: service01-tiger2
          uri: lb://SERVICE01  # Eureka에서 'SERVICE01'을 찾아 해당 서비스의 인스턴스로 로드 밸런싱하여 라우팅합니다.
          predicates:
            - Path=/tiger2/**  # '/tiger2/**' 경로로 들어오는 요청을 처리합니다.
        # 추가된 라우트 설정
        - id: hospital-service
          uri: lb://HospitalService  # Eureka에서 'HospitalService'를 찾아 해당 서비스의 인스턴스로 로드 밸런싱하여 라우팅합니다.
          predicates:
            - Path=/hospitals/**  # '/hospitals/**' 경로로 들어오는 요청을 처리합니다.
eureka:
  instance:
    non-secure-port: ${server.port}  # 인스턴스의 비보안 포트를 서버 포트로 설정합니다.
    prefer-ip-address: true  # IP 주소를 선호하도록 설정합니다.
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka  # Eureka 서버의 URL을 설정합니다.
server:
  port: 8765  # 게이트웨이 서버의 포트를 8765로 설정합니다.